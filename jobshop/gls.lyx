#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
Genetic Local Search
\end_layout

\begin_layout Standard
In this section genetic local search (explained in Section 2.3) will be applied
 to JSP by using Shifting Bottleneck Procedure.
 Recall the pseudocode in Section 2.3.2.
 
\emph on
Localsearch to improve chromosomes 
\emph default
can be achieved in different ways.
 SPB will do this for our problem, JPS.

\emph on
 
\emph default
After that some benchmarks will be presented, comparing it's results to
 other known GLS algorithms.
 
\end_layout

\begin_layout Subsubsection
Shifting Bottleneck Procedure
\end_layout

\begin_layout Standard
The first example is a combination of a genetic algorithm with a bottleneck
 shifting procedure.
 
\emph on
The shifting bottleneck procedure (SBP)
\emph default
 is an extensively used heuristic to approach optimal solutions for the
 job shop problem.
 Given a JSP-instance that consists of a multi-machine schedule and a certain
 number of jobs.
 The SBP starts by creating a partial schedule of just the first machine.
 The SBP then continues by iteratively bringing another machine (named the
 bottleneck) into the schedule.
 On every iteration SBP locally reoptimizes the current partial schedule
 for each individual machine, one by one.
 In essence, this reduces the JSP from solving a multi-machine scheduling
 problem to repeatedly solving single-machine scheduling problems 
\begin_inset CommandInset citation
LatexCommand cite
key "Adams-and-Joseph-1988"

\end_inset

.
 By improving partial schedules constructed in previous iterations, before
 entering the next iteration, SBP is called an constructive algorithm combined
 with local search.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Cesar-Rego-and-Renato-Duarte-2009"

\end_inset

.
\end_layout

\begin_layout Standard
Now consider the hybrid genetic approach for the SBP (SB-GA).
 In this approach a chromosome is denoted as an encoded list of ordered
 machines.
 Genetic algorithms evolve those chromosomes in order to retrieve better
 sequences of machines for SBP.
 The bottleneck shifting procedure is used to derive a schedule from these
 encodings of machine sequences.
 Resulting schedules differ greatly in quality, depending on the sequence
 of bottleneck machines 
\begin_inset CommandInset citation
LatexCommand cite
key "cheng99"

\end_inset

.
\end_layout

\begin_layout Standard
The procedure of deriving a schedule from the chromosome works as follows:
\end_layout

\begin_layout Itemize
-Let 
\begin_inset Formula $M_{0}$
\end_inset

 be the set of already sequenced machines (
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $M_{0}=\emptyset$
\end_inset

 at the start)
\end_layout

\begin_layout Itemize
-Given chromosome 
\begin_inset Formula $[m_{1},m_{2},m_{3},...m_{m}]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Start with 
\begin_inset Formula $M_{0}=\emptyset$
\end_inset

 and 
\begin_inset Formula $i=1$
\end_inset

.
\end_layout

\begin_layout Enumerate
Optimally solve partial schedule (job sequence) for machine 
\begin_inset Formula $m_{i}$
\end_inset

 and add 
\begin_inset Formula $m_{i}$
\end_inset

 to 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $M_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Re-optimize the sequence of each critical machine 
\begin_inset Formula $m_{i}\in M_{0}$
\end_inset

 in turn, while keeping the other sequences fixed.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $i=1+1$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $i>m$
\end_inset

, stop.
 Else, return to step 2.
\end_layout

\begin_layout Standard
This genetic shifting bottleneck procedure differs from the standard shifting
 bottleneck heuristic in a very crucial way.
 In the genetic approach the bottleneck is not a criterion for the choice
 of the next machine, because this is determined by the given chromosome.
 Thus, this genetic approach doesn't need to identify a bottleneck machine
 on every iteration 
\begin_inset CommandInset citation
LatexCommand cite
key "cheng99"

\end_inset

.
 In the next section, SB-GA will be tested for time and quality and will
 be compared to other genetic hybrids.
\end_layout

\begin_layout Subsubsection
Benchmarks
\end_layout

\begin_layout Standard
To illustrate the effectiveness of the genetic algorithm above, a set of
 test problems will be needed.
 Consider the following classes of standard JSP test problems: Fischer and
 Thompson FT06, FT10 (the notorious 10x10 JSP), FT20 and Lawrence and A.
 LA01-LA40.
 This is the typical test suite for JSP.
\end_layout

\begin_layout Standard
AT&T Labs Research made a comparison in 2002 between their self-introduced
 GLS and 12 other approaches to JSP, including SB-GA 
\begin_inset CommandInset citation
LatexCommand cite
key "Goncalves_ahybrid"

\end_inset

.
 In their results, SB-GA solved 35 out of 43 instances,.
 Also, almost half of these solutions (17) were equal to the best-known
 solution (BKS).
\end_layout

\begin_layout Standard
The average relative deviation (ARD) for SB-GA, with respect to the BKS
 has been found to be 1,42%, which is better than the genetic hybrids of
 Aarts et al.
 (1994) 
\begin_inset CommandInset citation
LatexCommand cite
key "AARTSE.H.L.:1994"

\end_inset

, Croce et al (1995) 
\begin_inset CommandInset citation
LatexCommand cite
key "Croce1995"

\end_inset

.
 However Gonçalves and Beirão's GLS (1999) 
\begin_inset CommandInset citation
LatexCommand cite
key "Goncalves_ahybrid"

\end_inset

 showed better results, solving all 43 test problems with an ARD of 0,90%.
\end_layout

\begin_layout Standard
Another benchmark for SB-GA was made in 1996 by Vaessens, Aarts and Lenstra
 (1996) 
\begin_inset CommandInset citation
LatexCommand cite
key "Vaessens-Aarts-Lenstra-1996"

\end_inset

, showing that SB-GA found solutions closer to BKS than other genetic algorithms
, and in less time.
 In seemed SB-GA worked especially well for the most difficult 15x15 problems
 (LA36-LA40).
 This benchmark shows an ARD of 1,48%, which is close to the 1,42% AT&T
 found.
 Lenstra also approximated the 
\emph on
Computer Independent Computation Time 
\emph default
(CICT) for SB-GA
\emph on
 
\emph default
at 4500.
 Compared to other GAs this is quite small, but compared to the non-genetic
 SPB this is rather big.
 SBP as proposed by Adams et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Adams-and-Joseph-1988"

\end_inset

 has a CICT of just 60 but a relatively large ARD of 2,50%.
\end_layout

\begin_layout Standard
From both benchmarks can be concluded that SB-GA works best for the most
 difficult problems, where the extra amount of time needed for calculation
 will be less than the amount of time saved by finding a better schedule.
\end_layout

\begin_layout Standard
Unfortunately, more recent publications of SB-GA benchmarks for the standard
 JSP are unavailable.
 This is because in the last decade, scientists have moved forward from
 a standard JSP to more complex problems like the flexible multi-objective
 JSP (fJSP), which is beyond the scope of this paper.
\end_layout

\end_body
\end_document
