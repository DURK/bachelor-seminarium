#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
What is local search?
\end_layout

\begin_layout Standard
Local search is a metaheuristic method to optimize solutions for NP-hard
 problems.
 The essence of local search algorithms lies in the search of lookalike
 solutions to these problems.
 One certain solution is selected as a canditate solution and evaluated.
 The evaluation of these solutions are based on a chosen heuristic, indicating
 the value of this solution.
 All the surrounding solutions are located in the candidate's neighborhood.
 The most valued solution in it's neighbourhood is then selected as new
 candidate solution.
 This search goes on until the algorithm hits the neighborhoods maximum.
 This maximum solution is called a local maximum.
\end_layout

\begin_layout Standard
To go into detail, consider the following notions:
\end_layout

\begin_layout Itemize
Set F contains all feasible solutions.
\end_layout

\begin_layout Itemize
Cost function: maps 
\begin_inset Formula $F\rightarrow\mathbb{R}$
\end_inset

, quantifing the fitness for each solution 
\begin_inset Formula $x\in F$
\end_inset

.
 Higher is better.
\end_layout

\begin_layout Itemize
Neighborhood function: maps 
\begin_inset Formula $F\rightarrow2^{F}$
\end_inset

, defining for each solution 
\begin_inset Formula $x\in F$
\end_inset

 a neighborhood 
\begin_inset Formula $N(x)\subseteq F.$
\end_inset


\end_layout

\begin_layout Standard
At the start of a local search, choosing a candidate solution 
\begin_inset Formula $x\in F$
\end_inset

, the cost function is executed to evaluate each 
\begin_inset Formula $y$
\end_inset


\begin_inset Formula $\in N(x).$
\end_inset

 Now the next thing to know is the relation between y and x.
 What is the size of N(x)? This is different for each problem.
 For instance, if we look for the biggest CLIQUE in a graph, the relation
 between x and y can be adding or removing a node from x.
 Consider the size of CLIQUE x, k.
 If y forms a CLIQUE of size k+1 the contrain c(x) < c(y) holds true and
 y is a possible next candidate solution.
 The next candidate solution, when available, is being selected based on
 the first improvement or the best improvement.
 The first improvement selects the first x that holds the following contraint:
 c(x) < c(y).
 "Mooi woord voor logisch nadenken" the best improvement select the highest
 improving c(y) E N(x).
 Finally, the algorithm must hit a candidate solution that holds c(x) =
 max(c(x) E N(x)).
 The algorithm then hits a local maximum and terminates.
 Not in all cases the algorithm waits for the local maximum to be found.
 Other stop conditions are also possible.
 Like a threshold for c(x), the improvement isn't big enough or after a
 certain amount of time.
\end_layout

\begin_layout Standard
Now consider the following image of a 1 dimensional problem (for instance,
 choosing the biggest piece of a cake):
\end_layout

\begin_layout Standard

\emph on
Please note that this problem isn't a NP-hard problem, but we need a few
 more dimensions to visualize NP-hard problems.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename images/state-space landscape.png

\end_inset


\end_layout

\begin_layout Standard
The x-axis represents the set F containing all the feasible solutions.
 The y-axis represents c(x).
\end_layout

\begin_layout Standard
Imagine that the algorithm starts at the local minimum between point b and
 c.
 The next iterative step will lead to a candidate solution in the direction
 of b.
 This process continues until the candidate solution is at point b.
 Expecting that everyone would agree that point a gives the optimal solution,
 the algorithm will return point b, another local maximum.
 It's easy to understand that the local search algorithm only return the
 nearest local maximum.
 In the next section we will explain how we open up the possibility of leaving
 a local maximum.
\end_layout

\end_body
\end_document
