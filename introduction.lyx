#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
The job shop problem (JSP) is a well-known scheduling problem and is one
 of the hardest combinatorial optimization problems
\begin_inset CommandInset citation
LatexCommand cite
key "Vaessens-Aarts-Lenstra-1996"

\end_inset

.
 Solving such a problem depicts finding the optimal solution from the set
 of all feasible solutions.
 Combinatorial optimization problems like JSP are problems with discrete
 variables, where the optimal solution is an optimal permutation of a finite
 set of variables.
 These kinds of problems has proven to be computationally challenging.
\end_layout

\begin_layout Standard
The challenging part of solving problems like JSP is the fact that there
 is no exact algorithm to solve this problem within polynomial time.
 Exact algorithms simply calculate the optimal answer for every possible
 instance of a problem.
 For JSP, such an algorithm has not yet been found.
 
\end_layout

\begin_layout Standard
Though, exact algorithms for specific variants of JSP have been found.
 A specific variant with ten jobs and ten operations (known as the 10x10
 benchmark problem) was proposed by Muth and Thompson in 1963 and could
 not be solved for over twenty years
\begin_inset CommandInset citation
LatexCommand cite
key "Fisher63probabilisticlearning"

\end_inset

.
 The first proven optimal solution was developed with exact algorithms by
 Carlier in 1987
\begin_inset CommandInset citation
LatexCommand cite
key "carlier-pinson"

\end_inset

.
 
\end_layout

\begin_layout Standard
15x15 problems are still considered to be unsolvable with exact methods
\begin_inset CommandInset citation
LatexCommand cite
key "Goncalves_ahybrid"

\end_inset

.
 Fortunately, there are ways of approximating the optimal solution by using
 a heuristic algorithm.
 During the last century a lot of heuristics algorithms have been developed
 and some of them have proven to be very successful.
 This paper will discuss solutions that have been found for solving JSP
 using genetic algorithms and local search.
 These two methods have proven to be very successful for hard combinatorial
 optimization problems in the past
\begin_inset CommandInset citation
LatexCommand cite
key "Vaessens-Aarts-Lenstra-1996"

\end_inset

.
\end_layout

\begin_layout Standard
The first section of this paper will cover the basics of heuristics, specificall
y genetic algorithms, local search and genetic hybrid algorithms.
 In the second section these specific types of heuristics are applied to
 JSP.
\end_layout

\begin_layout Standard
---------------------------------------------------------OUD--------------------
--------------------------------
\end_layout

\begin_layout Standard
The job shop problem (JSP) is one of the hardest combinatorial optimization
 problems
\begin_inset CommandInset citation
LatexCommand cite
key "Vaessens-Aarts-Lenstra-1996"

\end_inset

.
 In optimization problem the best solution has to be found from all possible
 solutions.
 Combinatorial optimization problems like JSP are optimization problems
 with discrete variables.
 Here we are looking for a permutation from a finite set of solutions.
 These kinds of problems has proven to be computationally challenging.
\end_layout

\begin_layout Standard
The JSP is an NP-hard problem which means that the problem is at least as
 hard as the hardest problems in NP.
 In practice this means that there is no exact algorithm to solve this problem
 within polynomial time for an arbitrary instance of JSP.
 It might be possible to approximate the optimal solution by using a heuristic
 algorithm.
 A specific variant of JSP with ten jobs and ten operations is known as
 the 10x10 benchmark problem and was proposed by Muth and Thompson in 1963
 and could not be solved for over twenty years
\begin_inset CommandInset citation
LatexCommand cite
key "Fisher63probabilisticlearning"

\end_inset

.
 The first proven optimal solution was developed with exact algorithms by
 Carlier in 1987
\begin_inset CommandInset citation
LatexCommand cite
key "carlier-pinson"

\end_inset

.
 15x15 problems are still considered to be unsolvable with exact methods
\begin_inset CommandInset citation
LatexCommand cite
key "Goncalves_ahybrid"

\end_inset

.
\end_layout

\begin_layout Standard
JSP was solved using a branch and bound algorithm (BB).
 BB algorithm is an exact algorithm that will enumerate all likely solutions
 in the solution space.
 Searching the complete solution space would be very time-consuming and
 therefore the algorithm will constantly split up the space (add boundaries)
 and discard not optimal solutions.
\end_layout

\begin_layout Standard
Using BB is just one way of solving the problem.
 Although this algorithm is proven to produce the optimal solution of the
 10x10 benchmark problem, scientists are still looking for better (heuristic)
 algorithms for JSP.
 Doing so will solve this problem faster with less use of memory or give
 more certainty about how optimal is the answer.
 
\end_layout

\begin_layout Standard
During the last century a lot of heuristics algorithms have been developed
 and some of them have proven to be very successful.
 This paper will discuss solutions that have been found for solving JSP
 using genetic algorithms and local search.
 These two methods have proven to be very successful for hard combinatorial
 optimization problems in the past
\begin_inset CommandInset citation
LatexCommand cite
key "Vaessens-Aarts-Lenstra-1996"

\end_inset

.
\end_layout

\begin_layout Standard
The paper will cover the basics of heuristics and specifically for genetic
 algorithms, local search and the combination of the two in the first section.
 In the second section these heuristics are applied to the job shop problem.
\end_layout

\end_body
\end_document
