#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
The job shop problem (JSP) is one of the hardest combinatorial problems
\begin_inset CommandInset citation
LatexCommand cite
key "Vaessens-Aarts-Lenstra-1996"

\end_inset

.
 An instance with ten jobs consisting from 100 operations which has to be
 processed on ten machines formulated in 1963 was not solved for more than
 25 years until 1986.
 Many solutions to this problem have been proposed but it was finally solved
 by a branch-and-bound algorithm.
\begin_inset CommandInset citation
LatexCommand cite
key "Fisher-Thompson-1963"

\end_inset


\end_layout

\begin_layout Standard
JSP is an NP hard problem what means that there is no algorithm which solves
 the JSP in polynomial time.
 Because of that we need heuristic algorithms that solve the problem.
 During the last century a lot of heuristics algorithms has been developed
 and some of them have proven to be very successful.
 In this paper we will discuss genetic algorithm and local search approaches.
\end_layout

\begin_layout Standard
This paper is organized as follows.
 In the first section different heuristics that can be used for solving
 JSP are being discussed.
 Local search and genetic algorithms are important parts of it.
 In the second section we discuss how the heuristics from section 1 could
 be applied to solve JSP.
 Also different solutions to solve the jobshop problem will be compared.
\end_layout

\end_body
\end_document
