#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Pure genetic alghoritms perform poor on JSP.
 By combining them with other heuristics better results can be reached.
 Two level hybrid algorithms such as SBP show good results on the most test
 cases.
 In the future more research might be done on combing the heuristics like
 local search on multiple levels to constantly improve the solution chromosomes.
 Hybrid algorithms will in many cases produce a schedule that finishes earlier
 than a schedule that is produced using another heuristics.
 The downside is that the hybrid algorithms require a longer time to compute
 their results than most heuristics.
\end_layout

\begin_layout Standard
There is a tade-off between the time algoritms run and the probability on
 best known answer.
 So when choosing between a hybrid genetic algorithms and heuristics a considera
tion must be made if it is more important to get a quick schedule that might
 have a worst finishing time or to have a slower algorithm with a higher
 probability of finding a better finishing time.
\end_layout

\begin_layout Standard
--
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
There is still a considerable room for improvement.
 As discussed in Section 3.3.2 no algorithms achieve optimal solutions for
 all instances of the test cases.
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
Dit is in vele dingen terug te zien, local search (best/first), hybrids
 (GA en LS), het speelt op elk niveau.
 Oplossingen worden steeds beter, en daarom worden de problemen juist moeilijker
 gemaakt.
 Logisch, aangezien het prestaties van de vorige algoritmes kennelijk 'acceptabe
l' waren, anders waren ze niet bekend geworden.
 Leuk zweverig en abstract stukje dus.
\end_layout

\end_body
\end_document
