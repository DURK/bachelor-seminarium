#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
The jobshop problem (JSP) is one of the well-known hardest combinatorial
 problems.
 This problem gained a lot of attention from computer scientists, who published
 a large amount of papers.
 However no polynomial solution to JSP has been found.
 This is because of JSP is member of NP hard class.
 This property makes this scheduling problem very interesting for many heuristic
s from simple dispatching rules to genetic algorithms and multi objective
 scheduling.
 Not all algorithms solve JSP well.
 Some of them perform well on global search but converge slowly, like genetic
 algorithms.
 Others like local search are perfect for performing the local search.
 Combining those two would provide a better answer for JSP and another constrain
ed combinatorial optimization problems.
\end_layout

\begin_layout Standard
In this paper we concentrate on genetic algorithms and simple hybrid combination
 of it with local search.
 In section 1 these methods are explained for general use.
 In section 2 application and implementation of those solutions is discussed.
 
\end_layout

\end_body
\end_document
